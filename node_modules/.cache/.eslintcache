[{"/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/index.js":"1","/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/App.js":"2","/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/reportWebVitals.js":"3","/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/components/Projects.js":"4","/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/components/Footer.js":"5","/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/components/NavBar.js":"6","/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/components/Skills.js":"7","/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/components/Banner.js":"8","/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/components/Contact.js":"9","/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/components/MailchimpForm.js":"10","/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/components/ProjectCard.js":"11","/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/components/Newsletter.js":"12"},{"size":535,"mtime":1658804347000,"results":"13","hashOfConfig":"14"},{"size":579,"mtime":1658804347000,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1658804347000,"results":"16","hashOfConfig":"14"},{"size":4191,"mtime":1668976428608,"results":"17","hashOfConfig":"14"},{"size":1129,"mtime":1668911738168,"results":"18","hashOfConfig":"14"},{"size":2590,"mtime":1668909220822,"results":"19","hashOfConfig":"14"},{"size":2948,"mtime":1668969875576,"results":"20","hashOfConfig":"14"},{"size":2977,"mtime":1668966777991,"results":"21","hashOfConfig":"14"},{"size":3717,"mtime":1658804347000,"results":"22","hashOfConfig":"14"},{"size":591,"mtime":1658804347000,"results":"23","hashOfConfig":"14"},{"size":359,"mtime":1658804347000,"results":"24","hashOfConfig":"14"},{"size":1386,"mtime":1668906977679,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1hgjt3r",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"29"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"29"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/index.js",[],[],[],"/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/App.js",["69"],[],"import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { NavBar } from \"./components/NavBar\";\nimport { Banner } from \"./components/Banner\";\nimport { Skills } from \"./components/Skills\";\nimport { Projects } from \"./components/Projects\";\nimport { Contact } from \"./components/Contact\";\nimport { Footer } from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Banner />\n      <Skills />\n      <Projects />\n      <Contact />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/reportWebVitals.js",[],[],"/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/components/Projects.js",["70"],[],"import { Container, Row, Col, Tab, Nav } from \"react-bootstrap\";\nimport { ProjectCard } from \"./ProjectCard\";\nimport projImg1 from \"../assets/img/project-img1.png\";\nimport projImg2 from \"../assets/img/project-img2.png\";\nimport projImg3 from \"../assets/img/project-img3.png\";\nimport projImg4 from \"../assets/img/project-img4.png\";\nimport projImg5 from \"../assets/img/project-img5.png\";\nimport projImg6 from \"../assets/img/project-img6.png\";\nimport colorSharp2 from \"../assets/img/color-sharp2.png\";\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\n\nexport const Projects = () => {\n\n  const projects = [\n    {\n      title: \"Website\",\n      description: \"Design & Development\",\n      imgUrl: projImg1,\n    },\n    {\n      title: \"Chatting\",\n      description: \"Web App\",\n      imgUrl: projImg2,\n    },\n    {\n      title: \"Ecommerce\",\n      description: \"Design & Development\",\n      imgUrl: projImg3,\n    },\n    {\n      title: \"Stripe Payments\",\n      description: \"Design & Development\",\n      imgUrl: projImg4,\n    },\n    {\n      title: \"Snake Game\",\n      description: \"Vanilla JS\",\n      imgUrl: projImg5,\n    },\n    {\n      title: \"Food Ordering\",\n      description: \"Web App\",\n      imgUrl: projImg6,\n    },\n  ];\n\n\n  return (\n    <section className=\"projects\" id=\"projects\">\n      <Container>\n        <Row>\n          <Col size={12}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\n                  <h2>Projects</h2>\n                  <p>I also see myself identifying a real issue and coming up with a solution. I personally adore computer science and emerging technologies and take great pleasure in creating simple projects and programs.</p>\n                  <Tab.Container id=\"projects-tabs\" defaultActiveKey=\"first\">\n                    <Nav variant=\"pills\" className=\"nav-pills mb-5 justify-content-center align-items-center\" id=\"pills-tab\">\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"first\"> All Project Cards</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"second\">More about Projects</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item>\n                        <Nav.Link eventKey=\"third\">About Snake Game</Nav.Link>\n                      </Nav.Item>\n                    </Nav>\n                    <Tab.Content id=\"slideInUp\" className={isVisible ? \"animate__animated animate__slideInUp\" : \"\"}>\n                      <Tab.Pane eventKey=\"first\">\n                        <Row>\n                          {\n                            projects.map((project, index) => {\n                              return (\n                                <ProjectCard\n                                  key={index}\n                                  {...project}\n                                />\n                              )\n                            })\n                          }\n                        </Row>\n                      </Tab.Pane>\n                      <Tab.Pane eventKey=\"second\">\n                        <p>React is Used in these projects, Key concepts used: React icons, useRef, useEffect, useState, useContext. Created a Clone of the Stripe Payment Menu Page i.e. designed a product landing page using React components.</p>\n                      </Tab.Pane>\n                      <Tab.Pane eventKey=\"third\">\n                        <p>JS and key concepts used: • querySelector • addEventListener • setInterval • keyCodes • pop • unshift • push • classList.contains • classList.add • classList.remove. In this game, You can use the up, down, right, or left arrows to move the snake. Food is provided at the several coordinates of the screen for making the snake longer and increase the points.</p>\n                      </Tab.Pane>\n                    </Tab.Content>\n                  </Tab.Container>\n                </div>}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n      <img className=\"background-image-right\" src={colorSharp2}></img>\n    </section>\n  )\n}","/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/components/Footer.js",[],[],"/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/components/NavBar.js",[],[],"/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/components/Skills.js",["71","72","73","74","75","76","77"],[],"import meter1 from \"../assets/img/meter1.svg\";\nimport meter2 from \"../assets/img/meter2.svg\";\nimport meter3 from \"../assets/img/meter3.svg\";\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport arrow1 from \"../assets/img/arrow1.svg\";\nimport arrow2 from \"../assets/img/arrow2.svg\";\nimport colorSharp from \"../assets/img/color-sharp.png\"\n\nexport const Skills = () => {\n  const responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: { max: 4000, min: 3000 },\n      items: 5\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 3\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1\n    }\n  };\n\n  return (\n    <section className=\"skill\" id=\"skills\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"skill-bx wow zoomIn\">\n              <h2>Skills</h2>\n              <p><b>Programming languages:</b> Python, JavaScript, Java, TypeScript<br></br>\n                <b>Computer Science:</b> Algorithms and Data Structures, Computer Networks, OS, DBMS, OOPS <br></br>\n                <b>Relational databases</b> and <b>SQL</b><br></br>\n                <b>Tools:</b> IntelliJ, PyCharm<br></br>\n                <b>Web Dev & Frameworks:</b> HTML, CSS, JavaScript, Bootstrap, Semantic UI, Bulma, AJAX and APIs, Selenium, Flask\n                <br></br><b>Databases:</b> MongoDB, MySQL, SQLite<br></br>\n                <b>Version Control System:</b> Git(distributed version control), SVN(Subversion)<br></br>\n                <b>Libraries:</b> Vanilla.js, React.js, Node.js(Back-end JS runtime Environment), Express.js, Mongoose(ODM-Object Data Modelling library),Beautiful Soup, Numpy, Pandas, Matplotlib, Plotly, Scikit Learn<br></br>\n                <b>Operating Systems:</b> UNIX/Linux(File Manipulation, Advanced Commands, Shell Scripting)</p>\n              <Carousel responsive={responsive} infinite={true} className=\"owl-carousel owl-theme skill-slider\">\n                <div className=\"item\">\n                  <img src={meter1} alt=\"Image\" />\n                  <h5>Front-End</h5>\n                </div>\n                <div className=\"item\">\n                  <img src={meter2} alt=\"Image\" />\n                  <h5>Algo and Data Structures</h5>\n                </div>\n                <div className=\"item\">\n                  <img src={meter3} alt=\"Image\" />\n                  <h5>Back-End</h5>\n                </div>\n                <div className=\"item\">\n                  <img src={meter1} alt=\"Image\" />\n                  <h5>Team Work</h5>\n                </div>\n              </Carousel>\n            </div>\n          </div>\n        </div>\n      </div>\n      <img className=\"background-image-left\" src={colorSharp} alt=\"Image\" />\n    </section>\n  )\n}","/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/components/Banner.js",["78","79"],[],"import { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport headerImg from \"../assets/img/header-img.svg\";\nimport { ArrowRightCircle } from 'react-bootstrap-icons';\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\n\nexport const Banner = () => {\n  const [loopNum, setLoopNum] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [text, setText] = useState('');\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\n  const [index, setIndex] = useState(1);\n  const toRotate = [ \"{Freshman at GMU}\", \"{Developer}\", \"{and I love Football}\" ];\n  const period = 2000;\n\n  useEffect(() => {\n    let ticker = setInterval(() => {\n      tick();\n    }, delta);\n\n    return () => { clearInterval(ticker) };\n  }, [text])\n\n  const tick = () => {\n    let i = loopNum % toRotate.length;\n    let fullText = toRotate[i];\n    let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n\n    setText(updatedText);\n\n    if (isDeleting) {\n      setDelta(prevDelta => prevDelta / 2);\n    }\n\n    if (!isDeleting && updatedText === fullText) {\n      setIsDeleting(true);\n      setIndex(prevIndex => prevIndex - 1);\n      setDelta(period);\n    } else if (isDeleting && updatedText === '') {\n      setIsDeleting(false);\n      setLoopNum(loopNum + 1);\n      setIndex(1);\n      setDelta(500);\n    } else {\n      setIndex(prevIndex => prevIndex + 1);\n    }\n  }\n\n  return (\n    <section className=\"banner\" id=\"home\">\n      <Container>\n        <Row className=\"aligh-items-center\">\n          <Col xs={12} md={6} xl={7}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n              <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\n                <span className=\"tagline\">Welcome to my Portfolio</span>\n                <h1>{`Hi! I'm Sahil`} <span className=\"txt-rotate\" dataPeriod=\"1000\" data-rotate='[ \"Web Developer\", \"Web Designer\", \"UI/UX Designer\" ]'><span className=\"wrap\">{text}</span></span></h1>\n                  <p>At the moment, I'm particularly interested in development, SaaS, and entrepreneurial problem-solving. I aim to create a global network of like-minded innovators worldwide, where everyone is valued and supported in achieving their full potential. I eagerly anticipate gaining knowledge via teamwork and doing so worldwide.</p>\n                  <button onClick={() => console.log('connect')}>Let’s Connect <ArrowRightCircle size={25} /></button>\n              </div>}\n            </TrackVisibility>\n          </Col>\n          <Col xs={12} md={6} xl={5}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <div className={isVisible ? \"animate__animated animate__zoomIn\" : \"\"}>\n                  <img src={headerImg} alt=\"Header Img\"/>\n                </div>}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  )\n}\n","/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/components/Contact.js",["80"],[],"import { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport contactImg from \"../assets/img/contact-img.svg\";\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\n\nexport const Contact = () => {\n  const formInitialDetails = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    message: ''\n  }\n  const [formDetails, setFormDetails] = useState(formInitialDetails);\n  const [buttonText, setButtonText] = useState('Send');\n  const [status, setStatus] = useState({});\n\n  const onFormUpdate = (category, value) => {\n      setFormDetails({\n        ...formDetails,\n        [category]: value\n      })\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setButtonText(\"Sending...\");\n    let response = await fetch(\"http://localhost:5000/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(formDetails),\n    });\n    setButtonText(\"Send\");\n    let result = await response.json();\n    setFormDetails(formInitialDetails);\n    if (result.code == 200) {\n      setStatus({ succes: true, message: 'Message sent successfully'});\n    } else {\n      setStatus({ succes: false, message: 'Something went wrong, please try again later.'});\n    }\n  };\n\n  return (\n    <section className=\"contact\" id=\"connect\">\n      <Container>\n        <Row className=\"align-items-center\">\n          <Col size={12} md={6}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <img className={isVisible ? \"animate__animated animate__zoomIn\" : \"\"} src={contactImg} alt=\"Contact Us\"/>\n              }\n            </TrackVisibility>\n          </Col>\n          <Col size={12} md={6}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\n                <h2>Get In Touch</h2>\n                <form onSubmit={handleSubmit}>\n                  <Row>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"text\" value={formDetails.firstName} placeholder=\"First Name\" onChange={(e) => onFormUpdate('firstName', e.target.value)} />\n                    </Col>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"text\" value={formDetails.lasttName} placeholder=\"Last Name\" onChange={(e) => onFormUpdate('lastName', e.target.value)}/>\n                    </Col>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"email\" value={formDetails.email} placeholder=\"Email Address\" onChange={(e) => onFormUpdate('email', e.target.value)} />\n                    </Col>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"tel\" value={formDetails.phone} placeholder=\"Phone No.\" onChange={(e) => onFormUpdate('phone', e.target.value)}/>\n                    </Col>\n                    <Col size={12} className=\"px-1\">\n                      <textarea rows=\"6\" value={formDetails.message} placeholder=\"Message\" onChange={(e) => onFormUpdate('message', e.target.value)}></textarea>\n                      <button type=\"submit\"><span>{buttonText}</span></button>\n                    </Col>\n                    {\n                      status.message &&\n                      <Col>\n                        <p className={status.success === false ? \"danger\" : \"success\"}>{status.message}</p>\n                      </Col>\n                    }\n                  </Row>\n                </form>\n              </div>}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  )\n}\n","/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/components/MailchimpForm.js",[],[],"/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/components/ProjectCard.js",["81"],[],"import { Col } from \"react-bootstrap\";\n\nexport const ProjectCard = ({ title, description, imgUrl }) => {\n  return (\n    <Col size={12} sm={6} md={4}>\n      <div className=\"proj-imgbx\">\n        <img src={imgUrl} />\n        <div className=\"proj-txtx\">\n          <h4>{title}</h4>\n          <span>{description}</span>\n        </div>\n      </div>\n    </Col>\n  )\n}\n","/Users/sahiljagtap/Desktop/Projects/Portfolio Website/sahil_web/src/components/Newsletter.js",[],[],{"ruleId":"82","severity":1,"message":"83","line":1,"column":8,"nodeType":"84","messageId":"85","endLine":1,"endColumn":12},{"ruleId":"86","severity":1,"message":"87","line":99,"column":7,"nodeType":"88","endLine":99,"endColumn":65},{"ruleId":"82","severity":1,"message":"89","line":6,"column":8,"nodeType":"84","messageId":"85","endLine":6,"endColumn":14},{"ruleId":"82","severity":1,"message":"90","line":7,"column":8,"nodeType":"84","messageId":"85","endLine":7,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":49,"column":19,"nodeType":"88","endLine":49,"endColumn":51},{"ruleId":"91","severity":1,"message":"92","line":53,"column":19,"nodeType":"88","endLine":53,"endColumn":51},{"ruleId":"91","severity":1,"message":"92","line":57,"column":19,"nodeType":"88","endLine":57,"endColumn":51},{"ruleId":"91","severity":1,"message":"92","line":61,"column":19,"nodeType":"88","endLine":61,"endColumn":51},{"ruleId":"91","severity":1,"message":"92","line":69,"column":7,"nodeType":"88","endLine":69,"endColumn":77},{"ruleId":"82","severity":1,"message":"93","line":13,"column":10,"nodeType":"84","messageId":"85","endLine":13,"endColumn":15},{"ruleId":"94","severity":1,"message":"95","line":23,"column":6,"nodeType":"96","endLine":23,"endColumn":12,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":39,"column":21,"nodeType":"100","messageId":"101","endLine":39,"endColumn":23},{"ruleId":"86","severity":1,"message":"87","line":7,"column":9,"nodeType":"88","endLine":7,"endColumn":29},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'arrow1' is defined but never used.","'arrow2' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'index' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'delta' and 'tick'. Either include them or remove the dependency array.","ArrayExpression",["102"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"103","fix":"104"},"Update the dependencies array to be: [delta, text, tick]",{"range":"105","text":"106"},[802,808],"[delta, text, tick]"]